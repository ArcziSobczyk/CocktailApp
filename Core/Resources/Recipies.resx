<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cubaLibreDescription" xml:space="preserve">
    <value />
  </data>
  <data name="cubaLibreIngredient1" xml:space="preserve">
    <value>40 ml białego rumu</value>
  </data>
  <data name="cubaLibreIngredient2" xml:space="preserve">
    <value>100-150 ml Coca-Cola</value>
  </data>
  <data name="cubaLibreIngredient3" xml:space="preserve">
    <value>3 ćwiartki limonki</value>
  </data>
  <data name="cubaLibreRecipe" xml:space="preserve">
    <value>Do szklanki typu long wrzuć cząstki limonki, zgnieć mudlerem. Następnie zasyp szkło kostkami lodu, wlej rum i Coca-Colę.</value>
  </data>
  <data name="cubaLibreTitle" xml:space="preserve">
    <value>Cuba Libre</value>
  </data>
  <data name="margharitaDescription" xml:space="preserve">
    <value>Drink margarita pochodzi z Meksyku. Jego nazwa prawdopodobnie wzięła się od imienia kobiety, dla której został przygotowany po raz pierwszy. To pyszny, orzeźwiający napój najczęściej przygotowywany z dodatkiem cytryny. Można go również podawać z innymi owocami lub sokami owocowymi - szczególną popularnością cieszy się wersja truskawkowa. Ważnym elementem podania Margarity jest crustowanie brzegu szklanki, w której podaje się koktajl.</value>
  </data>
  <data name="margharitaIngredient1" xml:space="preserve">
    <value>40 ml tequili</value>
  </data>
  <data name="margharitaIngredient2" xml:space="preserve">
    <value>20 ml triple sec</value>
  </data>
  <data name="margharitaIngredient3" xml:space="preserve">
    <value>sok z połówki limonki</value>
  </data>
  <data name="margharitaIngredient4" xml:space="preserve">
    <value>10 ml syropu cukrowego</value>
  </data>
  <data name="margharitaRecipe" xml:space="preserve">
    <value>Do shakera wlewamy tequile, triple sec, sok z limonki, wrzucamy kostki lodu i shake-ujemy. Zawartość shakera wlewamy do kieliszka koktajlowego. Smacznego!</value>
  </data>
  <data name="margharitaTitle" xml:space="preserve">
    <value>Margharita</value>
  </data>
  <data name="mohitoDescription" xml:space="preserve">
    <value>Podobno ten mentolowy koktajl ma już ponad 400 lat. Pochodzi z Kuby – nie bez powodu więc jego smak przywodzi na myśl pełne słońca plaże i szum Morza Karaibskiego. Legendy mówią, że mojito ewoluowało z napoju, którym raczyli się angielscy korsarze, w tym słynny kapitan Drake – rumu z trzciny cukrowej połączonego z cukrem i cytrusami. Inni historycy twierdzą z kolei, że czymś podobnym raczyli się kubańscy niewolnicy.</value>
  </data>
  <data name="mohitoIngredient1" xml:space="preserve">
    <value>50 ml białego rumu</value>
  </data>
  <data name="mohitoIngredient2" xml:space="preserve">
    <value>Pół limonki + ćwiartka do dekoracji</value>
  </data>
  <data name="mohitoIngredient3" xml:space="preserve">
    <value>2 łyżeczki cukru trzcinowego</value>
  </data>
  <data name="mohitoIngredient4" xml:space="preserve">
    <value>Kilka listków mięty</value>
  </data>
  <data name="mohitoIngredient5" xml:space="preserve">
    <value>25 ml wody gazowanej</value>
  </data>
  <data name="mohitoRecipe" xml:space="preserve">
    <value>Limonkę wyszorować, pokroić na ćwiartki i wrzucić do szklanki typu long drink Zasypać cukrem i dokładnie ugnieść. Następnie dodać listki mięty i znowu ugnieść. Do połowy wysokości szklanki dodać lód, a następnie rum i znów lód. Zamieszać. Na wierzch dodać wodę gazowaną i delikatnie zmieszać. Szklankę udekorować limonką i listkami mięty.</value>
  </data>
  <data name="mohitoTitle" xml:space="preserve">
    <value>Mojito</value>
  </data>
  <data name="pinaColadaDescription" xml:space="preserve">
    <value>Przepis na napój, w którym dominuje kokosowa nuta, pochodzi z Karaibów, a dokładniej z Portoryko. Wyspa ta kusi rajskimi plażami i idealnymi warunkami do wypoczynku, a widok turystów sączących eleganckie drinki jest tu normą.</value>
  </data>
  <data name="pinaColadaIngredient1" xml:space="preserve">
    <value>40 ml białego rumu</value>
  </data>
  <data name="pinaColadaIngredient2" xml:space="preserve">
    <value>20 ml mleczka kokosowego / syropu kokosowego / likieru kokosowego</value>
  </data>
  <data name="pinaColadaIngredient3" xml:space="preserve">
    <value>90 ml soku ananasowego</value>
  </data>
  <data name="pinaColadaIngredient4" xml:space="preserve">
    <value>splash mleka</value>
  </data>
  <data name="pinaColadaRecipe" xml:space="preserve">
    <value>Do shakera wlewamy wszystkie składniki, energicznie wstrząsamy. Przelewamy do szklanki typu hurricane i gotowe.</value>
  </data>
  <data name="pinaColadaTitle" xml:space="preserve">
    <value>Pina Colada</value>
  </data>
</root>